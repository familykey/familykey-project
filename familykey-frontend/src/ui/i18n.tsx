import React, { createContext, useContext, useMemo, useState } from 'react';

export type Lang = 'en' | 'zh';

type Dict = Record<string, string>;

const en: Dict = {
  brand: 'Family Key',
  nav_home: 'Home',
  nav_Owner: 'Settlor',
  nav_beneficiary: 'Beneficiary',
  nav_claim: 'Claim',
  nav_notifications: 'Notifications',
  notifications_title: 'Notification Settings',
  notifications_desc: 'Enable reminders and set an email for check-in alerts and claim progress updates.',
  lang_en: 'EN',
  lang_zh: '中文',
  logout: 'Logout',
  module_address: 'Module Address',

  hero_title: "Give your family a key — don't let your crypto be lost forever",
  hero_sub: 'Create a family fund with decentralized smart contracts, so if something happens to you your family can securely inherit your crypto assets.',
  hero_cta_Owner: 'I am the Settlor',
  hero_cta_beneficiary: 'I am the Beneficiary',
  view_project_intro: 'View Project Deck',

  Owner_title: 'Settlor Setup',
  Owner_desc: 'Invite a beneficiary, confirm onboarding, then set heartbeat & challenge durations, and finally create an inheritable Family Fund in one step.',
  connect_wallet: 'Connect Wallet',
  connecting_wallet: 'Connecting…',
  siwe_sign_in: 'Connect Wallet',
  siwe_signing: 'Signing…',
  siwe_signed_in: 'Signed in',
  connected: 'Connected',
  disconnect: 'Disconnect',
  safe_address: 'Safe Address',
  beneficiary_address: 'Beneficiary Address',
  heartbeat_interval: 'Heartbeat Duration (days)',
  challenge_period: 'Challenge Duration (days)',
  invite_title: 'Invite Beneficiary',
  invite_desc: 'Click Invite to generate a poster with logo + QR of the invite link. Download or copy the image, or copy the link directly.',
  invite_download_image: 'Download Poster',
  invite_copy_image: 'Copy Poster',
  invite_copy_link: 'Copy Link',
  invite_from: 'From',
  email: 'Email',
  phone: 'Phone',
  send_invite: 'Send Invite',
  reminder_email: 'Owner Reminder Email',
  save_settings: 'Save Settings',
  create_safe: 'Create Safe (single-owner)',
  create_and_deploy: 'Create Safe & Deploy Module',
  deploy_module: 'Deploy Module',
  enable_module: 'Enable Module in Safe',
  create_family_fund: 'Create Family Fund',

  beneficiary_title: 'Beneficiary Onboarding',
  beneficiary_desc: 'Accept invite and use email or phone number to create an account; login to view beneficiary information.',
  accept_invite: 'Accept Invite',
  bind_beneficiary: 'Bind Beneficiary',
  beneficiary_login: 'Beneficiary Login',
  invite_already_used: 'This invitation link has already been used. Please contact the settlor to create a new one.',

  // Home page – cases & why
  home_cases_title: 'Are you worried about your crypto assets being permanently lost due to an accident?',
   home_cases_sub: 'Lessons learned: build inheritance with fail-safes to avoid irreversible loss.',
   home_case_mellon_name: 'Matthew Mellon',
   home_case_mellon_desc: 'In 2018, Matthew Mellon died of a heart attack; his ~$1B XRP fortune became inaccessible due to scattered keys and no family disclosure.',
   home_case_popescu_name: 'Mircea Popescu',
   home_case_popescu_desc: 'In 2021, Mircea Popescu drowned in Costa Rica; his >$1B Bitcoin could not be recovered without usable keys.',
   home_case_moody_name: 'Matthew Moody',
   home_case_moody_desc: 'In 2013, bitcoin miner Matthew Moody died in a plane crash; his family could not access the inherited bitcoins.',
   home_cases_item_1: '2013: James Howells discarded a hard drive holding keys — ~7,500 BTC unreachable.',
   home_cases_item_2: '2018: QuadrigaCX founder’s unexpected death left keys inaccessible; customer funds locked.',
   home_cases_item_3: 'Forgotten or misplaced seed phrases: without recovery words, assets are irretrievable.',
   home_why_title: 'Why a decentralized crypto inheritance?',
   home_why_sub: 'Always preserve the decentralization and privacy of assets.',
   home_why_point_1: 'Avoid single-point trust risks: no reliance on custodians; transparent, verifiable smart contracts.',
   home_why_point_2: 'Automation and programmability: heartbeat and challenge rules enforced by code, reducing human error.',
   home_why_point_3: 'Privacy, least privilege: grant permissions only when conditions are met — never share seed phrases.',
   home_why_point_4: 'Borderless and censorship-resistant: no geographic or jurisdiction constraints; preserve the decentralized nature of assets.',
   home_why_point_5: 'Auditable and recoverable: on-chain states are auditable; the settlor can cancel during challenge.',
   home_why_point_6: 'Family coordination with secure notifications: reminders and updates keep everyone aligned.',
  beneficiary_account_title: 'Family Key Account Information',
  beneficiary_account_wallet: 'Secure wallet',
  beneficiary_account_email: 'Contact email',
  beneficiary_account_phone: 'Contact phone',
  beneficiary_account_status_binding: 'Saving your profile…',
  beneficiary_account_status_bound: 'Account linked successfully',
  beneficiary_account_status_error: 'We could not save your details. Please try again.',
  beneficiary_account_invite_status: 'Invite status',
  beneficiary_account_admin: 'Family administrator',
  beneficiary_invitations_title: 'Invitations you have received',
  beneficiary_invitations_empty: 'No invites yet. Ask the family administrator to share their link with you.',
  beneficiary_invitations_token: 'Invitation token',
  beneficiary_inheritance_title: 'Inheritance Family Fund',
  beneficiary_inheritance_empty: 'No inheritance plans yet. Contact the family fund settlor to set one up.',
  beneficiary_inheritance_empty_invited: 'Invite accepted. Waiting for the settlor to create the family fund.',
  beneficiary_inheritance_select: 'Choose a plan',
  beneficiary_inheritance_refresh: 'Refresh Status',
  beneficiary_inheritance_start_hint_active: 'You can start a claim once the family administrator misses a scheduled check-in.',
  beneficiary_inheritance_start_hint_pending: 'Claim already in progress. You can finalize it after the countdown ends.',
  beneficiary_inheritance_start_hint_unconfigured: 'Select an inheritance plan first.',
  beneficiary_inheritance_finalize_hint_pending: 'Countdown in progress. Come back once the timer reaches zero to finish inheriting.',
  beneficiary_inheritance_finalize_hint_inactive: 'Start the claim first before finalizing.',
  beneficiary_inheritance_finalize_hint_inherited: 'Inheritance already completed.',
  beneficiary_inheritance_last_updated: 'Last updated',
  beneficiary_inheritance_info: 'The family fund can be inherited only if the fund creator fails to check in before the heartbeat expires.',
  beneficiary_inheritance_info_claim: 'The settlor’s heartbeat has expired; you can start inheriting the family fund.',
  beneficiary_inheritance_info_challenge: 'Inheritance challenge in progress; wait until it ends to gain full permissions.',
  beneficiary_loading_profile: 'Loading profile…',
  beneficiary_loading_invite: 'Loading invite details…',
  beneficiary_privy_initializing: 'Privy is initializing, please wait…',
  beneficiary_privy_login_required: 'Please sign in with Privy first.',
  beneficiary_privy_missing_wallet: 'No embedded wallet detected.',
  beneficiary_refreshing: 'Refreshing…',
  status_accepted: 'Accepted',
  claim_tx_sent: 'Transaction submitted. Status will refresh shortly.',
  claim_switch_network: 'Please switch to Base Sepolia in your wallet.',
  claim_add_network_failed: 'Unable to add Base Sepolia network.',
  claim_wallet_provider_missing: 'Embedded wallet is unavailable right now.',
  claim_login_privy: 'Login with Privy',
  claim_wallet_label: 'Privy wallet',
  claim_wallet_missing: 'not created',
  claim_ready_to_finalize: 'Ready to finalize the inheritance.',
  claim_ready_to_start: 'You can start the inheritance now.',
  claim_current_owner: 'Current Settlor',
  claim_beneficiary: 'Beneficiary',
  claim_last_checkin: 'Family Fund Creator Last Check-in',
  claim_heartbeat_interval: 'Heartbeat Interval',
  claim_expires_at: 'Next Heartbeat Expires At',
  claim_ready_at: 'Finalize Inheritance At',
  claim_lifecycle_hint: 'Lifecycle Hint',
  claim_finalize_in: 'Finalize In',
  claim_heartbeat_active: 'Heartbeat still active',
  claim_not_started: 'Not started',
  start_claim: 'Start Claim',
  finalize_claim: 'Finalize Inheritance',
  claim_finalize_intro: 'You can now click “Finalize Inheritance” to complete the process.',
  claim_challenge_remaining: 'Challenge Remaining',
  read_status: 'Refresh Status',
};



const zh: Dict = {
  brand: 'Family Key',
  nav_home: '首页',
  nav_Owner: '委托人',
  nav_beneficiary: '受益人',
  nav_claim: '继承申领',
  nav_notifications: '消息通知',
  notifications_title: '消息通知',
  notifications_desc: '开启提醒并设置邮箱，用于心跳签到提醒与继承进度通知。',
  lang_en: 'EN',
  lang_zh: '中文',
  logout: '退出登录',
  module_address: '模块地址',

  hero_title: '给家人留把钥匙，别让你的加密资产因意外永久遗失',
  hero_sub: '基于去中心化的智能合约创建家庭基金，当你发生意外之后你的家人可以安全地继承这笔加密资产。',
  hero_cta_Owner: '我是委托人',
  hero_cta_beneficiary: '我是受益人',
  view_project_intro: '查看项目介绍',

  Owner_title: '委托人设置',
  Owner_desc: '先邀请受益人并确认其完成登记，再设置心跳与挑战期，最后一键创建可继承的家庭基金。',
  connect_wallet: '连接钱包',
  connecting_wallet: '连接中…',
  siwe_sign_in: '连接钱包',
  siwe_signing: '签名中…',
  siwe_signed_in: '已完成登录',
  connected: '已连接',
  disconnect: '断开连接',
  safe_address: 'Safe 地址',
  beneficiary_address: '受益人地址',
  heartbeat_interval: '心跳时长（天）',
  challenge_period: '继承挑战期（天）',
  invite_title: '邀请受益人',
  invite_desc: '点击"发送邀请"生成包含 Logo 与邀请链接二维码的图片；可下载、复制图片或直接复制链接。',
  invite_download_image: '下载邀请图片',
  invite_copy_image: '复制邀请图片',
  invite_copy_link: '复制邀请链接',
  invite_from: '来自',
  email: '邮箱',
  phone: '手机号',
  send_invite: '发送邀请',
  reminder_email: '委托人提醒邮箱',
  save_settings: '保存设置',
  create_safe: '创建 Safe（单签）',
  create_and_deploy: '创建 Safe 并部署模块',
  deploy_module: '部署模块',
  enable_module: '在 Safe 启用模块',
  create_family_fund: '创建家庭基金',

  beneficiary_title: '受益人加入',
  beneficiary_desc: '接受邀请并使用邮箱或手机号创建账号，登录查看受益人信息。',
  accept_invite: '接受邀请',
  bind_beneficiary: '绑定受益人',
  beneficiary_login: '受益人登录',
  invite_already_used: '该邀请链接已被使用，请联系委托人重新创建。',

  // 首页 – 案例与为什么
  home_why_title: '我们为什么需要一个去中心化的加密资产继承方案？',
  home_why_sub: '始终保持资产的去中心化和隐私属性',
  home_why_point_1: '避免单点信任风险：不依赖托管方/律师，智能合约透明可验证。',
  home_why_point_2: '自动化与可编程：心跳与挑战规则由代码执行，降低人为失误。',
  home_why_point_3: '隐私与最小暴露：仅在条件满足时授予必要权限，不共享助记词。',
  home_why_point_4: '跨地域与抗审查：不受地理与司法限制，保留资产去中心化属性。',
  home_why_point_5: '可审计与可恢复：链上状态可审计；挑战期内委托人可取消误触发。',
  home_why_point_6: '家庭协作与安全通知：到期提醒、逾期提示和权限变更帮助协作。',

  home_cases_title: '你担心自己的加密资产因意外永久遗失吗？',
  home_cases_sub: '真实教训：为继承设计防线，避免不可逆损失。',
  home_case_mellon_name: '马修·梅隆',
  home_case_mellon_desc: '2018年，马修·梅隆因心脏病去世；其约10万美元资产因私钥分散且未告知家人而无法动用。',
  home_case_popescu_name: '米尔恰·波佩斯库',
  home_case_popescu_desc: '2021年，米尔恰·波佩斯库在哥斯达黎加溺亡；其超过10万美元比特币因缺乏可用密钥无法取回。',
  home_case_moody_name: '马修·穆迪',
  home_case_moody_desc: '2013年，比特币矿工马修·穆迪在飞行事故中去世；其家人无法获取其比特币遗产。',
  home_cases_item_1: '2013 年，James Howells 不慎丢弃含私钥的硬盘，约 7,500 BTC 无法找回。',
  home_cases_item_2: '2018 年，QuadrigaCX 创始人意外身故，私钥仅其掌握，客户资金无法访问。',
  home_cases_item_3: '忘记或误放助记词：没有恢复短语，资产无法恢复。',
  home_cases_item_4: '设备损坏或未备份：硬盘损坏/重置导致钱包文件丢失。',
  home_cases_item_5: '误转错误地址或网络：不可逆交易导致资金永久丢失。',
  beneficiary_account_title: 'Family Key 帐号信息',
  beneficiary_account_wallet: '安全钱包地址',
  beneficiary_account_email: '联系邮箱',
  beneficiary_account_phone: '联系电话',
  beneficiary_account_status_binding: '正在保存你的资料…',
  beneficiary_account_status_bound: '账号已成功绑定',
  beneficiary_account_status_error: '暂时无法保存你的信息，请稍后重试。',
  beneficiary_account_invite_status: '邀请状态',
  beneficiary_account_admin: '家庭管理员', 
  beneficiary_invitations_title: '收到的邀请',
  beneficiary_invitations_empty: '还没有邀请，请联系家庭管理员分享邀请链接。',
  beneficiary_inheritance_title: '继承家庭基金',
  beneficiary_inheritance_empty: '尚未设置继承计划，请联系资金委托人创建家庭基金。',
  beneficiary_inheritance_empty_invited: '已接受邀请，等待资金委托人创建家庭基金。',
  beneficiary_inheritance_select: '选择一个计划',
  beneficiary_inheritance_refresh: '刷新状态',
  beneficiary_inheritance_start_hint_active: '当委托人错过签到后，你就可以发起继承流程。',
  beneficiary_inheritance_start_hint_pending: '继承流程已启动，请等待倒计时结束再完成。',
  beneficiary_inheritance_start_hint_unconfigured: '请先选择继承计划。',
  beneficiary_inheritance_finalize_hint_pending: '倒计时进行中，归属时间到达后再回来完成。',
  beneficiary_inheritance_finalize_hint_inactive: '请先启动继承流程。',
  beneficiary_inheritance_finalize_hint_inherited: '继承已完成。',
  beneficiary_inheritance_last_updated: '最新更新时间',
  beneficiary_inheritance_info: '当基金创建者在心跳到期前未完成签到方可继承家庭基金。',
  beneficiary_inheritance_info_claim: '资金委托人失去心跳，你可以开始继承家庭基金。',
  beneficiary_inheritance_info_challenge: '当前进入继承挑战期，等待挑战期结束正式获得家庭基金所有权限。',
  beneficiary_loading_profile: '正在加载资料…',
  beneficiary_loading_invite: '正在加载邀请详情…',
  beneficiary_privy_initializing: 'Privy 正在初始化，请稍候…',
  beneficiary_privy_login_required: '请先使用 Privy 登录。',
  beneficiary_privy_missing_wallet: '尚未检测到嵌入式钱包。',
  beneficiary_refreshing: '刷新中…',
  status_accepted: '已确认',
  claim_tx_sent: '交易已提交，状态即将刷新。',
  claim_switch_network: '请在钱包中切换到 Base Sepolia 网络。',
  claim_add_network_failed: '无法添加 Base Sepolia 网络。',
  claim_wallet_provider_missing: '嵌入式钱包暂时不可用。',
  claim_login_privy: '使用 Privy 登录',
  claim_wallet_label: 'Privy 钱包',
  claim_wallet_missing: '尚未创建',
  claim_ready_to_finalize: '现在可以完成继承。',
  claim_ready_to_start: '可以立即发起继承流程。',
  claim_current_owner: '当前委托人',
  claim_beneficiary: '受益人',
  claim_last_checkin: '基金创建者最近签到时间',
  claim_heartbeat_interval: '心跳间隔',
  claim_expires_at: '下次心跳到期时间',
  claim_ready_at: '正式继承时间',
  claim_lifecycle_hint: '流程提示',
  claim_finalize_in: '距离完成仍需',
  claim_heartbeat_active: '心跳仍然有效',
  claim_not_started: '尚未开始',
  start_claim: '开始继承',
  finalize_claim: '正式继承',
  claim_finalize_intro: '此时你可以点击正式继承完成家庭基金的继承。',
  claim_challenge_remaining: '挑战期剩余',
  read_status: '刷新状态',
};

const I18nContext = createContext<{ t: (k: keyof typeof en) => string; lang: Lang; setLang: (l: Lang) => void } | undefined>(undefined);

export function useI18n() {
  const ctx = useContext(I18nContext);
  if (!ctx) throw new Error('missing i18n context');
  return ctx;
}

export function I18nProvider({ children }: { children: React.ReactNode }) {
  const [lang, setLang] = useState<Lang>('zh');
  const dict = useMemo(() => (lang === 'zh' ? zh : en), [lang]);
  const t = useMemo(() => (key: keyof typeof en) => dict[key] || String(key), [dict]);
  const value = useMemo(() => ({ t, lang, setLang }), [t, lang]);
  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>;
}
